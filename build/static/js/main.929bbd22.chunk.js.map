{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","_ref","id","name","email","React","createElement","className","src","concat","alt","CardList","Robot","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchange","event","searchfield","target","value","Robots","componentDidMount","fetch","then","Response","json","users","filterRobots","filter","toLowerCase","includes","length","container","document","getElementById","createRoot"],"mappings":"iLAceA,MAXHC,IAAuB,IAAtBC,GAACA,EAAEC,KAAGA,EAAIC,MAAGA,GAAMH,EAErB,OAAOI,IAAAC,cAAA,OAAKC,UAAU,oDACjBF,IAAAC,cAAA,OAAKE,IAAG,uCAAAC,OAAyCP,GAAMQ,IAAI,UAC3DL,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKH,GACLE,IAAAC,cAAA,SAAIF,MCaTO,MAnBEV,IAAe,IAAdW,MAAEA,GAAOX,EAKzB,OACEI,IAAAC,cAAA,WACGM,EAAMC,IAAI,CAACC,EAAMC,IAChBV,IAAAC,cAACN,EAAI,CACHgB,IAAKD,EACLb,GAAIY,EAAKZ,GACTC,KAAMW,EAAKX,KACXC,MAAOU,EAAKV,WCHPa,MAVChB,IAAmB,IAAjBiB,aAACA,GAAajB,EAC5B,OACII,IAAAC,cAAA,OAAKC,UAAU,OACZF,IAAAC,cAAA,SAAOC,UAAU,mCAAmCY,KAAK,SACzDC,YAAY,qBACZC,SAAUH,MCGNI,MARAC,GAEPlB,IAAAC,cAAA,OAAKkB,MAAO,CAACC,UAAU,SAAWC,OAAO,kBAAoBC,OAAO,UAC/DJ,EAAMK,UCiBJC,MApBf,cAA2BC,YACvBC,YAAYR,GACRS,MAAMT,GACNU,KAAKC,MAAM,CACPC,UAAS,GAIjBC,kBAAkBC,EAAMC,GACdL,KAAKM,SAAS,CAACJ,UAAU,IAEnCK,SACI,OAAIP,KAAKC,MAAMC,SACJ9B,IAAAC,cAAA,UAAI,kCAEP2B,KAAKV,MAAMK,iBCsCZa,MAxCf,cAAkBX,YACdC,cACIC,QAAOC,KAaXS,aAAcC,KACVV,KAAKM,SAAS,CAACK,YAAcD,EAAME,OAAOC,UAb1Cb,KAAKC,MAAM,CACPa,OAAO,GACPH,YAAY,IAIpBI,oBACIC,MAAM,8CACLC,KAAKC,GAAWA,EAASC,QACzBF,KAAKG,GAAQpB,KAAKM,SAAS,CAACQ,OAAOM,KAOxCb,SACI,MAAMO,OAACA,EAAMH,YAAEA,GAAaX,KAAKC,MAC3BoB,EAAaP,EAAOQ,OAAO3C,GACtBA,EAAMT,KAAKqD,cAAcC,SAASb,EAAYY,gBAEzD,OAAQT,EAAOW,OAEfrD,IAAAC,cAAA,OAAKC,UAAU,MACfF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAACW,EAAS,CAACC,aAAce,KAAKS,eAC9BrC,IAAAC,cAACgB,EAAM,KACHjB,IAAAC,cAACuB,EAAY,KACbxB,IAAAC,cAACK,EAAQ,CAACC,MAAO0C,OAPGjD,IAAAC,cAAA,UAAI,aCjCpC,MAAMqD,EAAYC,SAASC,eAAe,QAC7BC,qBAAWH,GAGnBnB,OAAOnC,IAAAC,cAACmC,EAAG","file":"static/js/main.929bbd22.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css';\r\n\r\nconst Card =({id , name , email})=>{\r\n        //const {id , name , email}=props\r\n           return <div className=\"tc bg-light-green dib br3  pa3 ma2 grow shadow-5\">\r\n                <img src={`https://robohash.org/8TX.png?set=set${id}`} alt=\"Photo\"/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>  \r\n    }\r\n\r\nexport default Card; ","import React from \"react\";\r\nimport Card from '../components/Card';\r\n\r\nconst CardList = ({ Robot }) => {\r\n  if (false){\r\n    throw new  Error('Nooope');\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      {Robot.map((user, i) => (\r\n        <Card \r\n          key={i} \r\n          id={user.id} \r\n          name={user.name} \r\n          email={user.email}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox=( {searchChange})=>{\r\n    return (\r\n        <div className=\"pa2\">\r\n           <input className=\"pa3 ba b--green bg-lightest-blue\" type='search' \r\n           placeholder='Search Robots Here'\r\n           onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll =(props)=>{\r\n     return (\r\n        <div style={{overflowY:'scroll' , border:'1px solid black' , height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Scroll;","import React , {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n              this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <h1>Ooops We are facing some issue</h1>\r\n        }\r\n         return this.props.children \r\n    }\r\n   \r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React , {Component} from \"react\";\r\nimport CardList from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nimport '../components/index.css';\r\n\r\n\r\n\r\nconst state ={\r\n    Robots:[],\r\n    searchfield:\"\"\r\n}\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            Robots:[],\r\n            searchfield:\"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users =>this.setState({Robots:users}));\r\n        \r\n    }\r\n    onSearchange=(event)=>{\r\n        this.setState({searchfield : event.target.value})\r\n        }\r\n\r\n    render() {\r\n        const {Robots ,searchfield}=this.state\r\n        const filterRobots=Robots.filter(Robot=>{\r\n            return Robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !Robots.length ? <h1>loading</h1> : \r\n       (\r\n        <div className=\"tc\">\r\n        <h1>Robo Friends</h1> \r\n        <SearchBox searchChange={this.onSearchange}/>\r\n        <Scroll>\r\n            <ErrorBoundry >\r\n            <CardList Robot={filterRobots}/>\r\n           </ErrorBoundry>\r\n        </Scroll>\r\n        </div>\r\n    );\r\n}\r\n }\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport 'tachyons';\r\nimport App from './containers/App'\r\n\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container);\r\n\r\n//root.render(<Hello add={\"addt=ition of numbers\"} />);\r\nroot.render(<App/>);\r\n"],"sourceRoot":""}